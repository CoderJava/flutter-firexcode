import 'package:coderjava_firexcode/coderjava_firexcode.dart';
import 'package:flutter/rendering.dart';

extension IconButtons on Icon {
  Widget xOutLineButtonIcon({
    void Function() onPressed,
    bool autofocus = false,
    Clip clipBehavior = Clip.none,
    FocusNode focusNode,
    Key key,
    void Function() onLongPress,
    EdgeInsetsGeometry padding,
    ShapeBorder shape,
    Widget lable,
    Color color,
    MaterialTapTargetSize materialTapTargetSize,
    AlignmentGeometry alignment,
    BorderSide side,
    ButtonTextTheme textTheme,
    double elevation,
    Duration animationDuration,
    MouseCursor disabledMouseCursor,
    TextStyle textStyle,
    VisualDensity visualDensity,
    bool enableFeedback,
    MouseCursor enabledMouseCursor,
    Size minimumSize,
    Color onSurface,
    Color primary,
    Color shadowColor,
  }) {
    return OutlinedButton.icon(
      onPressed: onPressed,
      icon: this,
      label: lable,
      autofocus: autofocus,
      clipBehavior: clipBehavior,
      focusNode: focusNode,
      style: OutlinedButton.styleFrom(
        padding: padding,
        shape: shape,
        alignment: alignment,
        animationDuration: animationDuration,
        disabledMouseCursor: disabledMouseCursor,
        primary: primary,
        shadowColor: shadowColor,
        side: side,
        textStyle: textStyle,
        visualDensity: visualDensity,
        enableFeedback: enableFeedback,
        enabledMouseCursor: enabledMouseCursor,
        minimumSize: minimumSize,
        onSurface: onSurface,
        tapTargetSize: materialTapTargetSize,
        elevation: elevation,
        backgroundColor: color,
      ),
      key: key,
      onLongPress: onLongPress,
    );
  }

  Widget xOutlinedButtonIcon({
    void Function() onPressed,
    bool autofocus = false,
    Clip clipBehavior = Clip.none,
    FocusNode focusNode,
    Key key,
    void Function() onLongPress,
    EdgeInsetsGeometry padding,
    ShapeBorder shape,
    Widget lable,
    Color color,
    MaterialTapTargetSize materialTapTargetSize,
    AlignmentGeometry alignment,
    BorderSide side,
    ButtonTextTheme textTheme,
    double elevation,
    Duration animationDuration,
    MouseCursor disabledMouseCursor,
    TextStyle textStyle,
    VisualDensity visualDensity,
    bool enableFeedback,
    MouseCursor enabledMouseCursor,
    Size minimumSize,
    Color onSurface,
    Color primary,
    Color shadowColor,
  }) {
    return OutlinedButton.icon(
      onPressed: onPressed,
      icon: this,
      label: lable,
      autofocus: autofocus,
      clipBehavior: clipBehavior,
      focusNode: focusNode,
      style: OutlinedButton.styleFrom(
        padding: padding,
        shape: shape,
        alignment: alignment,
        animationDuration: animationDuration,
        disabledMouseCursor: disabledMouseCursor,
        primary: primary,
        shadowColor: shadowColor,
        side: side,
        textStyle: textStyle,
        visualDensity: visualDensity,
        enableFeedback: enableFeedback,
        enabledMouseCursor: enabledMouseCursor,
        minimumSize: minimumSize,
        onSurface: onSurface,
        tapTargetSize: materialTapTargetSize,
        elevation: elevation,
        backgroundColor: color,
      ),
      key: key,
      onLongPress: onLongPress,
    );
  }

  Widget xFlatButtonIcon({
    void Function() onPressed,
    bool autofocus = false,
    Clip clipBehavior = Clip.none,
    FocusNode focusNode,
    Key key,
    void Function() onLongPress,
    EdgeInsetsGeometry padding,
    ShapeBorder shape,
    Widget lable,
    Color color,
    MaterialTapTargetSize materialTapTargetSize,
    AlignmentGeometry alignment,
    BorderSide side,
    ButtonTextTheme textTheme,
    double elevation,
    Duration animationDuration,
    MouseCursor disabledMouseCursor,
    TextStyle textStyle,
    VisualDensity visualDensity,
    bool enableFeedback,
    MouseCursor enabledMouseCursor,
    Size minimumSize,
    Color onSurface,
    Color primary,
    Color shadowColor,
  }) {
    return TextButton.icon(
      onPressed: onPressed,
      icon: this,
      label: lable,
      autofocus: autofocus,
      clipBehavior: clipBehavior,
      focusNode: focusNode,
      style: TextButton.styleFrom(
        padding: padding,
        shape: shape,
        alignment: alignment,
        animationDuration: animationDuration,
        disabledMouseCursor: disabledMouseCursor,
        primary: primary,
        shadowColor: shadowColor,
        side: side,
        textStyle: textStyle,
        visualDensity: visualDensity,
        enableFeedback: enableFeedback,
        enabledMouseCursor: enabledMouseCursor,
        minimumSize: minimumSize,
        onSurface: onSurface,
        tapTargetSize: materialTapTargetSize,
        elevation: elevation,
        backgroundColor: color,
      ),
      key: key,
      onLongPress: onLongPress,
    );
  }

  Widget xTextButtonIcon({
    void Function() onPressed,
    bool autofocus = false,
    Clip clipBehavior = Clip.none,
    FocusNode focusNode,
    Key key,
    void Function() onLongPress,
    EdgeInsetsGeometry padding,
    ShapeBorder shape,
    Widget lable,
    Color color,
    MaterialTapTargetSize materialTapTargetSize,
    AlignmentGeometry alignment,
    BorderSide side,
    ButtonTextTheme textTheme,
    double elevation,
    Duration animationDuration,
    MouseCursor disabledMouseCursor,
    TextStyle textStyle,
    VisualDensity visualDensity,
    bool enableFeedback,
    MouseCursor enabledMouseCursor,
    Size minimumSize,
    Color onSurface,
    Color primary,
    Color shadowColor,
  }) {
    return TextButton.icon(
      onPressed: onPressed,
      icon: this,
      label: lable,
      autofocus: autofocus,
      clipBehavior: clipBehavior,
      focusNode: focusNode,
      style: TextButton.styleFrom(
        padding: padding,
        shape: shape,
        alignment: alignment,
        animationDuration: animationDuration,
        disabledMouseCursor: disabledMouseCursor,
        primary: primary,
        shadowColor: shadowColor,
        side: side,
        textStyle: textStyle,
        visualDensity: visualDensity,
        enableFeedback: enableFeedback,
        enabledMouseCursor: enabledMouseCursor,
        minimumSize: minimumSize,
        onSurface: onSurface,
        tapTargetSize: materialTapTargetSize,
        elevation: elevation,
        backgroundColor: color,
      ),
      key: key,
      onLongPress: onLongPress,
    );
  }

  Widget xRaisedButtonIcon(
      {bool autofocus = false,
      Clip clipBehavior = Clip.none,
      Color color,
      FocusNode focusNode,
      Key key,
      MaterialTapTargetSize materialTapTargetSize,
      void Function() onLongPress,
      EdgeInsetsGeometry padding,
      ShapeBorder shape,
      BorderSide side,
      ButtonTextTheme textTheme,
      Widget child,
      AlignmentGeometry alignment,
      double elevation,
      Duration animationDuration,
      MouseCursor disabledMouseCursor,
      Color primary,
      Color shadowColor,
      TextStyle textStyle,
      VisualDensity visualDensity,
      bool enableFeedback,
      MouseCursor enabledMouseCursor,
      Size minimumSize,
      Color onSurface,
      void Function() onPressed,
      final Widget label}) {
    return ElevatedButton.icon(
      onPressed: onPressed,
      icon: this,
      label: label,
      autofocus: autofocus,
      clipBehavior: clipBehavior,
      style: ElevatedButton.styleFrom(
        padding: padding,
        shape: shape,
        alignment: alignment,
        animationDuration: animationDuration,
        disabledMouseCursor: disabledMouseCursor,
        primary: color,
        shadowColor: shadowColor,
        side: side,
        textStyle: textStyle,
        visualDensity: visualDensity,
        enableFeedback: enableFeedback,
        enabledMouseCursor: enabledMouseCursor,
        minimumSize: minimumSize,
        onSurface: onSurface,
        tapTargetSize: materialTapTargetSize,
        elevation: elevation,
        onPrimary: primary,
      ),
      key: key,
      focusNode: focusNode,
      onLongPress: onLongPress,
    );
  }

  Widget xElevatedButtonIcon(
      {bool autofocus = false,
      Clip clipBehavior = Clip.none,
      Color color,
      FocusNode focusNode,
      Key key,
      MaterialTapTargetSize materialTapTargetSize,
      void Function() onLongPress,
      EdgeInsetsGeometry padding,
      ShapeBorder shape,
      BorderSide side,
      ButtonTextTheme textTheme,
      Widget child,
      AlignmentGeometry alignment,
      double elevation,
      Duration animationDuration,
      MouseCursor disabledMouseCursor,
      Color primary,
      Color shadowColor,
      TextStyle textStyle,
      VisualDensity visualDensity,
      bool enableFeedback,
      MouseCursor enabledMouseCursor,
      Size minimumSize,
      Color onSurface,
      void Function() onPressed,
      final Widget label}) {
    return ElevatedButton.icon(
      onPressed: onPressed,
      icon: this,
      label: label,
      autofocus: autofocus,
      clipBehavior: clipBehavior,
      style: ElevatedButton.styleFrom(
        padding: padding,
        shape: shape,
        alignment: alignment,
        animationDuration: animationDuration,
        disabledMouseCursor: disabledMouseCursor,
        primary: color,
        shadowColor: shadowColor,
        side: side,
        textStyle: textStyle,
        visualDensity: visualDensity,
        enableFeedback: enableFeedback,
        enabledMouseCursor: enabledMouseCursor,
        minimumSize: minimumSize,
        onSurface: onSurface,
        tapTargetSize: materialTapTargetSize,
        elevation: elevation,
        onPrimary: primary,
      ),
      key: key,
      focusNode: focusNode,
      onLongPress: onLongPress,
    );
  }
}
